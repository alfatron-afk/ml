import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import load_breast_cancer
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from sklearn.cluster import KMeans

# Load the breast cancer dataset
data = load_breast_cancer()
df = pd.DataFrame(data.data, columns=data.feature_names)
df['target'] = data.target

# Standardize the features
scaler = StandardScaler()
scaled_data = scaler.fit_transform(df.drop('target', axis=1))

# Apply PCA to reduce to 2 principal components
pca = PCA(n_components=2)
pca_data = pca.fit_transform(scaled_data)

# Create a DataFrame with PCA results and target
pca_df = pd.DataFrame(data=pca_data, columns=['Principal Component 1', 'Principal Component 2'])
pca_df['target'] = df['target']

# Plot: True Labels of Breast Cancer Dataset
plt.figure(figsize=(10, 6))
sns.scatterplot(data=pca_df, x='Principal Component 1', y='Principal Component 2',
                hue='target', palette='coolwarm', alpha=0.7)
plt.title("True Labels of Breast Cancer Dataset")
plt.legend(title='True Label', labels=['Malignant (0)', 'Benign (1)'])
plt.show()

# Apply K-Means clustering
kmeans = KMeans(n_clusters=2, random_state=42)
clusters = kmeans.fit_predict(pca_data)
pca_df['cluster'] = clusters

# Plot: K-Means Clustering of Breast Cancer Dataset
plt.figure(figsize=(10, 6))
sns.scatterplot(data=pca_df, x='Principal Component 1', y='Principal Component 2',
                hue='cluster', palette='coolwarm', alpha=0.7)
plt.title("K-Means Clustering of Breast Cancer Dataset")
plt.legend(title='Cluster')
plt.show()
